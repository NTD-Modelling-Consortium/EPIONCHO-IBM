# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Testing Simulations

on:
  push:
    branches-ignore:
      - 'master'
  pull_request:
    branches: [ "master" ]

permissions:
  actions: read
  contents: read
  pull-requests: read
  packages: read

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      artifactId: ${{ steps.artifact-upload-step.outputs.artifact-id }}
      artifactId2: ${{ steps.artifact-upload-step-2.outputs.artifact-id }}
      artifactId3: ${{ steps.artifact-upload-step-3.outputs.artifact-id }}
      artifactId4: ${{ steps.artifact-upload-step-4.outputs.artifact-id }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip3 install flake8 poetry
    - name: Setup Env with Poetry
      run: |
        poetry lock
        poetry install
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    #- name: Run Unit Tests
    #  run: |
    #    cd tests/
    #    poetry run pytest
    #    cd ../
    - name: Run Base Model
      run: |
        poetry run python examples/testing_modules/test_new_changes.py
    - name: Set up R
      uses: r-lib/actions/setup-r@v2
      with:
        r-version: latest 
        use-public-rspm: true
    - name: Install R Dependencies
      uses: r-lib/actions/setup-r-dependencies@v2
      with:
        packages: |
          any::ggplot2
          any::dplyr
          any::patchwork
          any::stringr
    - name: Run Visualization Code in R
      run: Rscript test_outputs/compare_model_to_r.R
    - name: Save PR number
      env:
        PR_NUMBER: ${{ github.event.number }}
      run: |
        mkdir -p ./pr
        echo $PR_NUMBER > ./pr/pr_number
    - name: Upload PR number as an artifact
      uses: actions/upload-artifact@v4
      with:
        name: pr_number
        path: pr/
    - name: Upload image as artifact
      uses: actions/upload-artifact@v4
      id: artifact-upload-step
      with:
        name: model-comparison-image
        path: test_outputs/comparison_plot.png
    - name: Upload image as artifact
      uses: actions/upload-artifact@v4
      id: artifact-upload-step-2
      with:
        name: sequelae-annual-zip
        path: test_outputs/testing_CIV0162715440-new_run_mox_annual_age-grouped_sequelae_output.zip
    - name: Upload image as artifact
      uses: actions/upload-artifact@v4
      id: artifact-upload-step-3
      with:
        name: sequelae-biannnual-zip
        path: test_outputs/testing_CIV0162715440-new_run_mox_biannual_age-grouped_sequelae_output.zip
    - name: Upload image as artifact
      uses: actions/upload-artifact@v4
      id: artifact-upload-step-4
      with:
        name: sequelae-quadannual-zip
        path: test_outputs/testing_CIV0162715440-new_run_mox_quadannual_age-grouped_sequelae_output.zip
  comment-success:
    runs-on: ubuntu-latest
    if: success() && github.event_name == 'pull_request'
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Get Image URL and create comment 
        uses: actions/github-script@v7
        env:
          ARTIFACTID: ${{needs.build.outputs.artifactId}}
          ARTIFACTID2: ${{needs.build.outputs.artifactId2}}
          ARTIFACTID3: ${{needs.build.outputs.artifactId3}}
          ARTIFACTID4: ${{needs.build.outputs.artifactId4}}
        with:
          script: |
            // Function to get artifact ID and add it to a PR if the build script succeeds
            async function runAsync() {
              // Getting previously created artifact id, and creating links needed for the comment 
              const artifactId = process.env.ARTIFACTID
              const artifactId2 = process.env.ARTIFACTID2
              const artifactId3 = process.env.ARTIFACTID3
              const artifactId4 = process.env.ARTIFACTID4
              const artifact_url = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}/artifacts/${artifactId}`
              const artifact_url2 = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}/artifacts/${artifactId2}`
              const artifact_url3 = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}/artifacts/${artifactId3}`
              const artifact_url4 = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}/artifacts/${artifactId4}`

              const workflow_url = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`
              const test_file = `https://github.com/${context.repo.owner}/${context.repo.repo}/blob/master/examples/testing_modules/test_new_changes.py`
              
              // Creating the comment, including a markdown table with the links
              const comment_body = ':white_check_mark: Automated Test has been run successfully.\n' +
              '**Please look at the Comparison Plot and verify that your changes are valid.**\n' +
              'Access the workflow information:\n' +
              '| Type | Link |\n' +
              '| --- | --- |\n' +
              `| Workflow | ${workflow_url} |\n`+
              `| Comparison Plot | ${artifact_url} |\n` +
              `| Annual MOX Sequelae Plots | ${artifact_url2} |\n` +
              `| Biannual MOX Sequelae Plots | ${artifact_url3} |\n` +
              `| Quadnnual MOX Sequelae Plots | ${artifact_url4} |\n\n` +
              `To run this test locally, run the code in the [examples/testing_modules/test_new_changes.py](${test_file}) file.`

              let fs = require('fs');
              fs.mkdirSync(`${process.env.GITHUB_WORKSPACE}/pr/`)
              fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/pr/pr_comment`, Buffer.from(comment_body));
            }

            // Using a separate function to run asyncronous code within a github action.
            await runAsync()
      - name: Upload comment as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: pr_comment
          path: pr/pr_comment
  comment-failure:
    runs-on: ubuntu-latest
    if: failure() && github.event_name == 'pull_request'
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Create Failure Comment
        uses: actions/github-script@v7
        with:
          script: |
            // Upload a comment to the PR if the build script fails
            async function runAsync() {
              // Creating urls that will be added to the comment
              const github_url = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`
              const test_file = `https://github.com/${context.repo.owner}/${context.repo.repo}/blob/master/examples/test_new_changes.py`
              
              // Creating comment with proper styling
              const comment_body = ':rotating_light: Automated Test failed.\n' +
              `Please see the [workflow](${github_url}) for more details.` +
              `To run this test locally, run the code in the [examples/testing_modules/test_new_changes.py](${test_file}) file.`
              
              let fs = require('fs');
              fs.mkdirSync(`${process.env.GITHUB_WORKSPACE}/pr/`)
              fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/pr/pr_comment`, Buffer.from(comment_body));
            }

            // Using a separate function to run asyncronous code within a github action.
            await runAsync()
      - name: Upload comment as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: pr_comment
          path: pr/pr_comment